sonata_classification:
    class:
        tag: Application\Sonata\ClassificationBundle\Entity\Tag
        category: Application\Sonata\ClassificationBundle\Entity\Category
        collection: Application\Sonata\ClassificationBundle\Entity\Collection
        context: Application\Sonata\ClassificationBundle\Entity\Context

    admin:
        tag:
            class:        Sonata\ClassificationBundle\Admin\TagAdmin
            controller:   SonataAdminBundle:CRUD
            translation:  SonataClassificationBundle
        category:
            class:        Sonata\ClassificationBundle\Admin\CategoryAdmin
            controller:   SonataClassificationBundle:CategoryAdmin
            translation:  SonataClassificationBundle
        collection:
            class:        Sonata\ClassificationBundle\Admin\CollectionAdmin
            controller:   SonataAdminBundle:CRUD
            translation:  SonataClassificationBundle
        context:
            class:        Sonata\ClassificationBundle\Admin\ContextAdmin
            controller:   SonataAdminBundle:CRUD
            translation:  SonataClassificationBundle

sonata_cache:
    caches:
        esi:
            token: an unique security key # a random one is generated by default
            servers:
                - varnishadm -T 127.0.0.1:2000 {{ COMMAND }} "{{ EXPRESSION }}"

        ssi:
            token: an unique security key # a random one is generated by default

        # mongo:
        #     database:   cache
        #     collection: cache
        #     servers:
        #         - {host: 127.0.0.1, port: 27017, user: username, password: pASS'}
        #         - {host: 127.0.0.2}

        # memcached:
        #     prefix: test     # prefix to ensure there is no clash between instances
        #     servers:
        #         - {host: 127.0.0.1, port: 11211, weight: 0}

        # predis:
        #     servers:
        #         - {host: 127.0.0.1, port: 6379, database: 42}

        # apc:
        #     token:  s3cur3   # token used to clear the related cache
        #     prefix: test     # prefix to ensure there is no clash between instances
        #     servers:
        #         - { domain: kooqit.local, ip: 127.0.0.1, port: 8000 }
        #     timeout:
        #         RCV: { sec: 5, usec: 0 }
        #         SND: { sec: 5, usec: 0 }

        symfony:
            token: s3cur3 # token used to clear the related cache
            php_cache_enabled: true # Optional (default: false), clear OPcache
            types: [mytype1, mycustomtype2] # Optional, you can restrict allowed cache types
            servers:
                - { domain: sonata.localhost, ip: 127.0.0.1, port: 8000 }
            timeout:
                RCV: { sec: 2, usec: 0 }
                SND: { sec: 2, usec: 0 }